package vn.edu.iuh.fit.controllers;

import jakarta.inject.Inject;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.HttpSession;
import vn.edu.iuh.fit.dtos.PhongBan;
import vn.edu.iuh.fit.models.PhongBanModel;

import java.io.IOException;
import java.util.List;

@WebServlet(name = "PhongBan", value = "/phongban/*")
public class PhongBanController extends HttpServlet {

    @Inject
    private PhongBanModel model;

    @Override
    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException {
        try {
            String tenPhongBan = req.getParameter("tenPhongBan");
            if (tenPhongBan != null && !tenPhongBan.isEmpty()) {
                model.addPhongBan(tenPhongBan);
                resp.sendRedirect(req.getContextPath() + "/phongban");
            } else {
                resp.getWriter().write("<script>alert('Thêm thất bại');</script>");
                resp.sendRedirect(req.getContextPath() + "/phongban");
            }
        } catch (Exception e) {
            resp.getWriter().write("Error occurred: " + e.getMessage());
        }
    }

    @Override
    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
        try {
            List<PhongBan> listPhongBan = model.listPhongBan();
            HttpSession session = req.getSession(true);
            session.setAttribute("phongbans", listPhongBan);
            resp.sendRedirect("views/phongban.jsp");
        } catch (Exception e) {
            resp.getWriter().write("Error occurred: " + e.getMessage());
        }
    }

    // Handle update requests
    @Override
    protected void doPut(HttpServletRequest req, HttpServletResponse resp) throws IOException {
        try {
            long id = Long.parseLong(req.getParameter("id"));
            String newTenPhongBan = req.getParameter("tenPhongBan");

            if (newTenPhongBan != null && !newTenPhongBan.isEmpty()) {
                model.updatePhongBan(id, newTenPhongBan);
                resp.getWriter().write("<script>alert('Cập nhật thành công');</script>");
            } else {
                resp.getWriter().write("<script>alert('Cập nhật thất bại');</script>");
            }
            resp.sendRedirect(req.getContextPath() + "/phongban");
        } catch (Exception e) {
            resp.getWriter().write("Error occurred: " + e.getMessage());
        }
    }

    // Handle delete requests
    @Override
    protected void doDelete(HttpServletRequest req, HttpServletResponse resp) throws IOException {
        try {
            long id = Long.parseLong(req.getParameter("id"));
            model.deletePhongBan(id);
            resp.getWriter().write("<script>alert('Xóa thành công');</script>");
            resp.sendRedirect(req.getContextPath() + "/phongban");
        } catch (Exception e) {
            resp.getWriter().write("Error occurred: " + e.getMessage());
        }
    }
}
